//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.36119
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace xNet {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("xNet.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Поток не поддерживает чтение или перемещение позиции..
        /// </summary>
        internal static string ArgumentException_CanNotReadOrSeek {
            get {
                return ResourceManager.GetString("ArgumentException_CanNotReadOrSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра не может быть строкой нулевой длины..
        /// </summary>
        internal static string ArgumentException_EmptyString {
            get {
                return ResourceManager.GetString("ArgumentException_EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение заголовка &apos;{0}&apos; можно задать только с помощью специального свойства..
        /// </summary>
        internal static string ArgumentException_HttpRequest_SetNotAvailableHeader {
            get {
                return ResourceManager.GetString("ArgumentException_HttpRequest_SetNotAvailableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Начальный индекс диапазона не может быть больше конечного индекса..
        /// </summary>
        internal static string ArgumentException_MultiThreading_BegIndexRangeMoreEndIndex {
            get {
                return ResourceManager.GetString("ArgumentException_MultiThreading_BegIndexRangeMoreEndIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Допустимо использовать только абсолютный URI..
        /// </summary>
        internal static string ArgumentException_OnlyAbsoluteUri {
            get {
                return ResourceManager.GetString("ArgumentException_OnlyAbsoluteUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь является пустой строкой, содержит только пробелы или содержит недопустимые символы..
        /// </summary>
        internal static string ArgumentException_WrongPath {
            get {
                return ResourceManager.GetString("ArgumentException_WrongPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра не может быть больше {0}..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeGreater {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра не может быть меньше {0}..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeLess {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeLess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Значение параметра не может быть меньше {0} или больше {1}..
        /// </summary>
        internal static string ArgumentOutOfRangeException_CanNotBeLessOrGreater {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_CanNotBeLessOrGreater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Начальная позиция не может быть больше длины строки..
        /// </summary>
        internal static string ArgumentOutOfRangeException_StringHelper_MoreLengthString {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_StringHelper_MoreLengthString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длина строки не должна быть больше {0} символов..
        /// </summary>
        internal static string ArgumentOutOfRangeException_StringLengthCanNotBeMore {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_StringLengthCanNotBeMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь указывает на несуществующую директорию {0}..
        /// </summary>
        internal static string DirectoryNotFoundException_DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFoundException_DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверно задан порт..
        /// </summary>
        internal static string FormatException_ProxyClient_WrongPort {
            get {
                return ResourceManager.GetString("FormatException_ProxyClient_WrongPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка на стороне клиента. Код состояния: {0}.
        /// </summary>
        internal static string HttpException_ClientError {
            get {
                return ResourceManager.GetString("HttpException_ClientError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вышло время ожидания подключения к HTTP-серверу &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ConnectTimeout {
            get {
                return ResourceManager.GetString("HttpException_ConnectTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка при работе с HTTP-протоколом..
        /// </summary>
        internal static string HttpException_Default {
            get {
                return ResourceManager.GetString("HttpException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось соединиться с HTTP-сервером &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedConnect {
            get {
                return ResourceManager.GetString("HttpException_FailedConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить IP-адреса узла &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedGetHostAddresses {
            get {
                return ResourceManager.GetString("HttpException_FailedGetHostAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось загрузить тело сообщения ответа от HTTP-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedReceiveMessageBody {
            get {
                return ResourceManager.GetString("HttpException_FailedReceiveMessageBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось загрузить ответ от HTTP-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedReceiveResponse {
            get {
                return ResourceManager.GetString("HttpException_FailedReceiveResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось отправить запрос HTTP-серверу &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedSendRequest {
            get {
                return ResourceManager.GetString("HttpException_FailedSendRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось установить SSL-соединение с HTTP-сервером &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_FailedSslConnect {
            get {
                return ResourceManager.GetString("HttpException_FailedSslConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Превышено допустимое количество последовательных переадресаций..
        /// </summary>
        internal static string HttpException_LimitRedirections {
            get {
                return ResourceManager.GetString("HttpException_LimitRedirections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен пустой ответ от HTTP-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ReceivedEmptyResponse {
            get {
                return ResourceManager.GetString("HttpException_ReceivedEmptyResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен ошибочный ответ от HTTP-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_ReceivedWrongResponse {
            get {
                return ResourceManager.GetString("HttpException_ReceivedWrongResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка на стороне сервера. Код состояния: {0}.
        /// </summary>
        internal static string HttpException_SeverError {
            get {
                return ResourceManager.GetString("HttpException_SeverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вышло время ожидания данных от HTTP-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string HttpException_WaitDataTimeout {
            get {
                return ResourceManager.GetString("HttpException_WaitDataTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен неверный размер блока данных при использовании Chunked: {0}.
        /// </summary>
        internal static string HttpException_WrongChunkedBlockLength {
            get {
                return ResourceManager.GetString("HttpException_WrongChunkedBlockLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен неверный кукис &apos;{0}&apos; от HTTP-сервера &apos;{1}&apos;..
        /// </summary>
        internal static string HttpException_WrongCookie {
            get {
                return ResourceManager.GetString("HttpException_WrongCookie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен неверный заголовок &apos;{0}&apos; от HTTP-сервера &apos;{1}&apos;..
        /// </summary>
        internal static string HttpException_WrongHeader {
            get {
                return ResourceManager.GetString("HttpException_WrongHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не задано ни одного прокси-сервера для цепочки..
        /// </summary>
        internal static string InvalidOperationException_ChainProxyClient_NotProxies {
            get {
                return ResourceManager.GetString("InvalidOperationException_ChainProxyClient_NotProxies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Невозможно выполнить метод, так как при получении ответа произошла ошибка..
        /// </summary>
        internal static string InvalidOperationException_HttpResponse_HasError {
            get {
                return ResourceManager.GetString("InvalidOperationException_HttpResponse_HasError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен неподдерживаемый формат кодирования: {0}.
        /// </summary>
        internal static string InvalidOperationException_NotSupportedEncodingFormat {
            get {
                return ResourceManager.GetString("InvalidOperationException_NotSupportedEncodingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хост не может быть неопределённым или иметь нулевую длину..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongHost {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длина пароля не может быть больше 255 символов..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongPassword {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Порт не может быть меньше 1 или больше 65535..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongPort {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длина имени пользователя не может быть больше 255 символов..
        /// </summary>
        internal static string InvalidOperationException_ProxyClient_WrongUsername {
            get {
                return ResourceManager.GetString("InvalidOperationException_ProxyClient_WrongUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка при работе с сетью..
        /// </summary>
        internal static string NetException_Default {
            get {
                return ResourceManager.GetString("NetException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} Прокси-сервер &apos;{1}&apos;..
        /// </summary>
        internal static string ProxyException_CommandError {
            get {
                return ResourceManager.GetString("ProxyException_CommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вышло время ожидания подключения к прокси-серверу &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ConnectTimeout {
            get {
                return ResourceManager.GetString("ProxyException_ConnectTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка при работе с прокси..
        /// </summary>
        internal static string ProxyException_Default {
            get {
                return ResourceManager.GetString("ProxyException_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка при работе с прокси-сервером &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_Error {
            get {
                return ResourceManager.GetString("ProxyException_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось соединиться с прокси-сервером &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_FailedConnect {
            get {
                return ResourceManager.GetString("ProxyException_FailedConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить IP-адреса узла &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_FailedGetHostAddresses {
            get {
                return ResourceManager.GetString("ProxyException_FailedGetHostAddresses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хост &apos;{0}&apos; типа &apos;{1}&apos; не поддерживает используемый тип адресса. Поддерживаются следующие типы: InterNetwork и InterNetworkV6. Прокси-сервер &apos;{2}&apos;..
        /// </summary>
        internal static string ProxyException_NotSupportedAddressType {
            get {
                return ResourceManager.GetString("ProxyException_NotSupportedAddressType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен пустой ответ от прокси-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ReceivedEmptyResponse {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedEmptyResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен ошибочный ответ от прокси-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_ReceivedWrongResponse {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedWrongResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Получен неверный код статуса &apos;{0}&apos; от прокси-сервера &apos;{1}&apos;..
        /// </summary>
        internal static string ProxyException_ReceivedWrongStatusCode {
            get {
                return ResourceManager.GetString("ProxyException_ReceivedWrongStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось выполнить аутентификацию на прокси-сервере &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_Socks5_FailedAuthOn {
            get {
                return ResourceManager.GetString("ProxyException_Socks5_FailedAuthOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вышло время ожидания данных от прокси-сервера &apos;{0}&apos;..
        /// </summary>
        internal static string ProxyException_WaitDataTimeout {
            get {
                return ResourceManager.GetString("ProxyException_WaitDataTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неизвестная ошибка..
        /// </summary>
        internal static string Socks_UnknownError {
            get {
                return ResourceManager.GetString("Socks_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запрос не удался, потому-что не запущен identd (или не доступен с сервера)..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedCannotConnectToIdentd {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedCannotConnectToIdentd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запрос не удался, поскольку клиентский identd не может подтвердить идентификатор пользователя в запросе..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedDifferentIdentd {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedDifferentIdentd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запрос отклонён или ошибочен..
        /// </summary>
        internal static string Socks4_CommandReplyRequestRejectedOrFailed {
            get {
                return ResourceManager.GetString("Socks4_CommandReplyRequestRejectedOrFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Предложенные методы аутентификации не поддерживаются..
        /// </summary>
        internal static string Socks5_AuthMethodReplyNoAcceptableMethods {
            get {
                return ResourceManager.GetString("Socks5_AuthMethodReplyNoAcceptableMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Тип адреса не поддерживается..
        /// </summary>
        internal static string Socks5_CommandReplyAddressTypeNotSupported {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyAddressTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Команда не поддерживается, либо ошибка протокола..
        /// </summary>
        internal static string Socks5_CommandReplyCommandNotSupported {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyCommandNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Соединение запрещено набором правил..
        /// </summary>
        internal static string Socks5_CommandReplyConnectionNotAllowedByRuleset {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyConnectionNotAllowedByRuleset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отказ в соединении..
        /// </summary>
        internal static string Socks5_CommandReplyConnectionRefused {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyConnectionRefused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка SOCKS-сервера..
        /// </summary>
        internal static string Socks5_CommandReplyGeneralSocksServerFailure {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyGeneralSocksServerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хост недоступен..
        /// </summary>
        internal static string Socks5_CommandReplyHostUnreachable {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyHostUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сеть недоступна..
        /// </summary>
        internal static string Socks5_CommandReplyNetworkUnreachable {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyNetworkUnreachable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Истёк TTL..
        /// </summary>
        internal static string Socks5_CommandReplyTTLExpired {
            get {
                return ResourceManager.GetString("Socks5_CommandReplyTTLExpired", resourceCulture);
            }
        }
    }
}
